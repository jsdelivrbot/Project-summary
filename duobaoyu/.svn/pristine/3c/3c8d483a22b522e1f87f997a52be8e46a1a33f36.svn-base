<template>
    <div class="model_Box_wrapper checkInfo_model upLoadModel ">
        <div class="model_Box">
            <div class="Title">
                <img src="static/imgs/model_title1.png">
            </div>
            <div class="close" @click="close">
                <img src="static/imgs/close_page.png">
            </div>
            <div class="content">
                <div class="info_item input_group">
                    <label class="label">打款证明上传</label>
                    <!-- <vue-file-upload ref="vueFileUploader" >
                                            <div slot="label" class="upload_icon">
                                                <img src="static/imgs/uploadIcon_03.png">
                                            </div>
                                        </vue-file-upload>
                                        <div class="imgPreview">
                                            <img >
                                        </div> -->
                    <div v-if="!hasImg" class="vue-file-upload">
                        <div class="upload_icon">
                            <img src="static/imgs/uploadIcon_03.png">
                        </div>
                        <input type="file" @change="onFileChange">
                    </div>
                    <div v-if="hasImg" class="vue-file-upload vue-file-upload-preview">
                        <img :src="img" />
                        <button @click="removeImage">
                            <img src="static/imgs/close.png">
                        </button>
                    </div>
                </div>
            </div>
            <div class="btnBox text_center">
                <button class="btn_yellowBg">
                                                        <img src="static/imgs/confirm.png">
                                                      </button>
            </div>
        </div>
    </div>
</template>

<script>
    import VueFileUpload from 'vue-file-upload';
    export default {
        data() {
            return {
                isOpen: false,
                images: [],
                img: '',
                hasImg:false,
            }
        },
        mounted() {
           
        },
        methods: {
            close() {
                this.$emit('close-upLoad', this.isOpen)
            },
            onFileChange: function(e) {
                var dom = e.currentTarget;
                var files = e.target.files || e.dataTransfer.files;
                if (!files.length) return;
                this.createImage(files);
            },
            createImage(file) {
                var vm = this;
                var reader = null;
                var leng = file.length;
                console.log(file);
                for (var i = 0; i < leng; i++) {
                    reader = new window.FileReader();
                    reader.readAsDataURL(file[i]);
                    reader.onload = function(e) {
                        vm.images.push(e.target.result);
                        console.log(vm.images);
                        vm.img=vm.images[0];
                        vm.hasImg=true;
                    }
                }
            },
            removeImage: function(e) {
                this.images = [];
                this.hasImg=false
            },
        },
        components: {
            VueFileUpload
        }
    }
</script>

<style>

</style>
